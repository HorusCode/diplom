name: Deploy actions
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  init:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.6
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: diplom
        ports:
          - 3306
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install composer dependencies
      - run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Install npm dependencies
      - run: npm install
      - name: Copy .env
      - run: composer run post-root-package-install
      - name: Generate key
      - run: composer run post-create-project-cmd
      - name: Set "diplom" database in var DB_DATABASE
      - env:
          DB_DATABASE: diplom
  build-js-production:
    name: Build JavaScript/CSS for PRODUCTION Server
    runs-on: ubuntu-latest
    needs: init
    steps:
      - uses: actions/checkout@v1
      - name: NPM Build
        run: |
            npm install
            npm run production
      - name: Put built assets in Artifacts
      - uses: actions/upload-artifact@v1
      - with:
          name: assets
          path: public
  deploy-production:
    name: Deploy Project to PRODUCTION Server
    runs-on: ubuntu-latest
    needs: [ build-js-production, init ]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch built assets from Artifacts
      - uses: actions/download-artifact@v3
      - with:
          name: assets
          path: public
      - name: Setup PHP
      - uses: shivammathur/setup-php@master
      - with:
          php-version: 7.2
          extension-csv: mbstring, bcmath
      - name: Composer install
      - run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Setup Deployer
      - uses: atymic/deployer-php-action@master
      - name: Deploy to PRODUCTION Server
      - env:
          DOT_ENV: ${{ secrets.DOT_ENV_PRODUCTION }}
      - run: dep deploy production


